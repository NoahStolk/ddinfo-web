// ReSharper disable StringLiteralTypo
using System.Diagnostics;

namespace DevilDaggersInfo.Core.CriteriaExpression.Extensions;

public static class CustomLeaderboardCriteriaTypeExtensions
{
	public static string Display(this CustomLeaderboardCriteriaType criteriaType) => criteriaType switch
	{
		CustomLeaderboardCriteriaType.GemsCollected => "Gems collected",
		CustomLeaderboardCriteriaType.GemsDespawned => "Gems despawned",
		CustomLeaderboardCriteriaType.GemsEaten => "Gems eaten",
		CustomLeaderboardCriteriaType.EnemiesKilled => "Total kills",
		CustomLeaderboardCriteriaType.DaggersFired => "Daggers fired",
		CustomLeaderboardCriteriaType.DaggersHit => "Daggers hit",
		CustomLeaderboardCriteriaType.HomingStored => "Homing stored",
		CustomLeaderboardCriteriaType.HomingEaten => "Homing eaten",
		CustomLeaderboardCriteriaType.Skull1Kills => "Skull I kills",
		CustomLeaderboardCriteriaType.Skull2Kills => "Skull II kills",
		CustomLeaderboardCriteriaType.Skull3Kills => "Skull III kills",
		CustomLeaderboardCriteriaType.Skull4Kills => "Skull IV kills",
		CustomLeaderboardCriteriaType.SpiderlingKills => "Spiderling kills",
		CustomLeaderboardCriteriaType.SpiderEggKills => "Spider Egg kills",
		CustomLeaderboardCriteriaType.Squid1Kills => "Squid I kills",
		CustomLeaderboardCriteriaType.Squid2Kills => "Squid II kills",
		CustomLeaderboardCriteriaType.Squid3Kills => "Squid III kills",
		CustomLeaderboardCriteriaType.CentipedeKills => "Centipede kills",
		CustomLeaderboardCriteriaType.GigapedeKills => "Gigapede kills",
		CustomLeaderboardCriteriaType.GhostpedeKills => "Ghostpede kills",
		CustomLeaderboardCriteriaType.Spider1Kills => "Spider I kills",
		CustomLeaderboardCriteriaType.Spider2Kills => "Spider II kills",
		CustomLeaderboardCriteriaType.LeviathanKills => "Leviathan kills",
		CustomLeaderboardCriteriaType.OrbKills => "Orb kills",
		CustomLeaderboardCriteriaType.ThornKills => "Thorn kills",
		CustomLeaderboardCriteriaType.Skull1sAlive => "Skull Is alive",
		CustomLeaderboardCriteriaType.Skull2sAlive => "Skull IIs alive",
		CustomLeaderboardCriteriaType.Skull3sAlive => "Skull IIIs alive",
		CustomLeaderboardCriteriaType.Skull4sAlive => "Skull IVs alive",
		CustomLeaderboardCriteriaType.SpiderlingsAlive => "Spiderlings alive",
		CustomLeaderboardCriteriaType.SpiderEggsAlive => "Spider Eggs alive",
		CustomLeaderboardCriteriaType.Squid1sAlive => "Squid Is alive",
		CustomLeaderboardCriteriaType.Squid2sAlive => "Squid IIs alive",
		CustomLeaderboardCriteriaType.Squid3sAlive => "Squid IIIs alive",
		CustomLeaderboardCriteriaType.CentipedesAlive => "Centipedes alive",
		CustomLeaderboardCriteriaType.GigapedesAlive => "Gigapedes alive",
		CustomLeaderboardCriteriaType.GhostpedesAlive => "Ghostpedes alive",
		CustomLeaderboardCriteriaType.Spider1sAlive => "Spider Is alive",
		CustomLeaderboardCriteriaType.Spider2sAlive => "Spider IIs alive",
		CustomLeaderboardCriteriaType.LeviathansAlive => "Leviathans alive",
		CustomLeaderboardCriteriaType.OrbsAlive => "Orbs alive",
		CustomLeaderboardCriteriaType.ThornsAlive => "Thorns alive",
		CustomLeaderboardCriteriaType.DeathType => "Death type",
		CustomLeaderboardCriteriaType.Time => "Time",
		CustomLeaderboardCriteriaType.LevelUpTime2 => "Level 2 hand",
		CustomLeaderboardCriteriaType.LevelUpTime3 => "Level 3 hand",
		CustomLeaderboardCriteriaType.LevelUpTime4 => "Level 4 hand",
		CustomLeaderboardCriteriaType.EnemiesAlive => "Enemies alive",
		_ => throw new UnreachableException(),
	};

	public static string GetIdentifier(this CustomLeaderboardCriteriaType criteriaType) => criteriaType switch
	{
		CustomLeaderboardCriteriaType.GemsCollected => "gems",
		CustomLeaderboardCriteriaType.GemsDespawned => "gemsdespawned",
		CustomLeaderboardCriteriaType.GemsEaten => "gemseaten",
		CustomLeaderboardCriteriaType.EnemiesKilled => "kills",
		CustomLeaderboardCriteriaType.DaggersFired => "daggers",
		CustomLeaderboardCriteriaType.DaggersHit => "hits",
		CustomLeaderboardCriteriaType.HomingStored => "homing",
		CustomLeaderboardCriteriaType.HomingEaten => "homingeaten",
		CustomLeaderboardCriteriaType.Skull1Kills => "skull1kills",
		CustomLeaderboardCriteriaType.Skull2Kills => "skull2kills",
		CustomLeaderboardCriteriaType.Skull3Kills => "skull3kills",
		CustomLeaderboardCriteriaType.Skull4Kills => "skull4kills",
		CustomLeaderboardCriteriaType.SpiderlingKills => "spiderlingkills",
		CustomLeaderboardCriteriaType.SpiderEggKills => "eggkills",
		CustomLeaderboardCriteriaType.Squid1Kills => "squid1kills",
		CustomLeaderboardCriteriaType.Squid2Kills => "squid2kills",
		CustomLeaderboardCriteriaType.Squid3Kills => "squid3kills",
		CustomLeaderboardCriteriaType.CentipedeKills => "centikills",
		CustomLeaderboardCriteriaType.GigapedeKills => "gigakills",
		CustomLeaderboardCriteriaType.GhostpedeKills => "ghostkills",
		CustomLeaderboardCriteriaType.Spider1Kills => "spider1kills",
		CustomLeaderboardCriteriaType.Spider2Kills => "spider2kills",
		CustomLeaderboardCriteriaType.LeviathanKills => "levikills",
		CustomLeaderboardCriteriaType.OrbKills => "orbkills",
		CustomLeaderboardCriteriaType.ThornKills => "thornkills",
		CustomLeaderboardCriteriaType.Skull1sAlive => "skull1salive",
		CustomLeaderboardCriteriaType.Skull2sAlive => "skull2salive",
		CustomLeaderboardCriteriaType.Skull3sAlive => "skull3salive",
		CustomLeaderboardCriteriaType.Skull4sAlive => "skull4salive",
		CustomLeaderboardCriteriaType.SpiderlingsAlive => "spiderlingsalive",
		CustomLeaderboardCriteriaType.SpiderEggsAlive => "eggsalive",
		CustomLeaderboardCriteriaType.Squid1sAlive => "squid1salive",
		CustomLeaderboardCriteriaType.Squid2sAlive => "squid2salive",
		CustomLeaderboardCriteriaType.Squid3sAlive => "squid3salive",
		CustomLeaderboardCriteriaType.CentipedesAlive => "centisalive",
		CustomLeaderboardCriteriaType.GigapedesAlive => "gigasalive",
		CustomLeaderboardCriteriaType.GhostpedesAlive => "ghostsalive",
		CustomLeaderboardCriteriaType.Spider1sAlive => "spider1salive",
		CustomLeaderboardCriteriaType.Spider2sAlive => "spider2salive",
		CustomLeaderboardCriteriaType.LeviathansAlive => "levisalive",
		CustomLeaderboardCriteriaType.OrbsAlive => "orbsalive",
		CustomLeaderboardCriteriaType.ThornsAlive => "thornsalive",
		CustomLeaderboardCriteriaType.DeathType => "death",
		CustomLeaderboardCriteriaType.Time => "time",
		CustomLeaderboardCriteriaType.LevelUpTime2 => "level2",
		CustomLeaderboardCriteriaType.LevelUpTime3 => "level3",
		CustomLeaderboardCriteriaType.LevelUpTime4 => "level4",
		CustomLeaderboardCriteriaType.EnemiesAlive => "enemiesalive",
		_ => throw new UnreachableException(),
	};

	public static string ToStringFast(this CustomLeaderboardCriteriaType criteriaType) => criteriaType switch
	{
		CustomLeaderboardCriteriaType.GemsCollected => nameof(CustomLeaderboardCriteriaType.GemsCollected),
		CustomLeaderboardCriteriaType.GemsDespawned => nameof(CustomLeaderboardCriteriaType.GemsDespawned),
		CustomLeaderboardCriteriaType.GemsEaten => nameof(CustomLeaderboardCriteriaType.GemsEaten),
		CustomLeaderboardCriteriaType.EnemiesKilled => nameof(CustomLeaderboardCriteriaType.EnemiesKilled),
		CustomLeaderboardCriteriaType.DaggersFired => nameof(CustomLeaderboardCriteriaType.DaggersFired),
		CustomLeaderboardCriteriaType.DaggersHit => nameof(CustomLeaderboardCriteriaType.DaggersHit),
		CustomLeaderboardCriteriaType.HomingStored => nameof(CustomLeaderboardCriteriaType.HomingStored),
		CustomLeaderboardCriteriaType.HomingEaten => nameof(CustomLeaderboardCriteriaType.HomingEaten),
		CustomLeaderboardCriteriaType.Skull1Kills => nameof(CustomLeaderboardCriteriaType.Skull1Kills),
		CustomLeaderboardCriteriaType.Skull2Kills => nameof(CustomLeaderboardCriteriaType.Skull2Kills),
		CustomLeaderboardCriteriaType.Skull3Kills => nameof(CustomLeaderboardCriteriaType.Skull3Kills),
		CustomLeaderboardCriteriaType.Skull4Kills => nameof(CustomLeaderboardCriteriaType.Skull4Kills),
		CustomLeaderboardCriteriaType.SpiderlingKills => nameof(CustomLeaderboardCriteriaType.SpiderlingKills),
		CustomLeaderboardCriteriaType.SpiderEggKills => nameof(CustomLeaderboardCriteriaType.SpiderEggKills),
		CustomLeaderboardCriteriaType.Squid1Kills => nameof(CustomLeaderboardCriteriaType.Squid1Kills),
		CustomLeaderboardCriteriaType.Squid2Kills => nameof(CustomLeaderboardCriteriaType.Squid2Kills),
		CustomLeaderboardCriteriaType.Squid3Kills => nameof(CustomLeaderboardCriteriaType.Squid3Kills),
		CustomLeaderboardCriteriaType.CentipedeKills => nameof(CustomLeaderboardCriteriaType.CentipedeKills),
		CustomLeaderboardCriteriaType.GigapedeKills => nameof(CustomLeaderboardCriteriaType.GigapedeKills),
		CustomLeaderboardCriteriaType.GhostpedeKills => nameof(CustomLeaderboardCriteriaType.GhostpedeKills),
		CustomLeaderboardCriteriaType.Spider1Kills => nameof(CustomLeaderboardCriteriaType.Spider1Kills),
		CustomLeaderboardCriteriaType.Spider2Kills => nameof(CustomLeaderboardCriteriaType.Spider2Kills),
		CustomLeaderboardCriteriaType.LeviathanKills => nameof(CustomLeaderboardCriteriaType.LeviathanKills),
		CustomLeaderboardCriteriaType.OrbKills => nameof(CustomLeaderboardCriteriaType.OrbKills),
		CustomLeaderboardCriteriaType.ThornKills => nameof(CustomLeaderboardCriteriaType.ThornKills),
		CustomLeaderboardCriteriaType.Skull1sAlive => nameof(CustomLeaderboardCriteriaType.Skull1sAlive),
		CustomLeaderboardCriteriaType.Skull2sAlive => nameof(CustomLeaderboardCriteriaType.Skull2sAlive),
		CustomLeaderboardCriteriaType.Skull3sAlive => nameof(CustomLeaderboardCriteriaType.Skull3sAlive),
		CustomLeaderboardCriteriaType.Skull4sAlive => nameof(CustomLeaderboardCriteriaType.Skull4sAlive),
		CustomLeaderboardCriteriaType.SpiderlingsAlive => nameof(CustomLeaderboardCriteriaType.SpiderlingsAlive),
		CustomLeaderboardCriteriaType.SpiderEggsAlive => nameof(CustomLeaderboardCriteriaType.SpiderEggsAlive),
		CustomLeaderboardCriteriaType.Squid1sAlive => nameof(CustomLeaderboardCriteriaType.Squid1sAlive),
		CustomLeaderboardCriteriaType.Squid2sAlive => nameof(CustomLeaderboardCriteriaType.Squid2sAlive),
		CustomLeaderboardCriteriaType.Squid3sAlive => nameof(CustomLeaderboardCriteriaType.Squid3sAlive),
		CustomLeaderboardCriteriaType.CentipedesAlive => nameof(CustomLeaderboardCriteriaType.CentipedesAlive),
		CustomLeaderboardCriteriaType.GigapedesAlive => nameof(CustomLeaderboardCriteriaType.GigapedesAlive),
		CustomLeaderboardCriteriaType.GhostpedesAlive => nameof(CustomLeaderboardCriteriaType.GhostpedesAlive),
		CustomLeaderboardCriteriaType.Spider1sAlive => nameof(CustomLeaderboardCriteriaType.Spider1sAlive),
		CustomLeaderboardCriteriaType.Spider2sAlive => nameof(CustomLeaderboardCriteriaType.Spider2sAlive),
		CustomLeaderboardCriteriaType.LeviathansAlive => nameof(CustomLeaderboardCriteriaType.LeviathansAlive),
		CustomLeaderboardCriteriaType.OrbsAlive => nameof(CustomLeaderboardCriteriaType.OrbsAlive),
		CustomLeaderboardCriteriaType.ThornsAlive => nameof(CustomLeaderboardCriteriaType.ThornsAlive),
		CustomLeaderboardCriteriaType.DeathType => nameof(CustomLeaderboardCriteriaType.DeathType),
		CustomLeaderboardCriteriaType.Time => nameof(CustomLeaderboardCriteriaType.Time),
		CustomLeaderboardCriteriaType.LevelUpTime2 => nameof(CustomLeaderboardCriteriaType.LevelUpTime2),
		CustomLeaderboardCriteriaType.LevelUpTime3 => nameof(CustomLeaderboardCriteriaType.LevelUpTime3),
		CustomLeaderboardCriteriaType.LevelUpTime4 => nameof(CustomLeaderboardCriteriaType.LevelUpTime4),
		CustomLeaderboardCriteriaType.EnemiesAlive => nameof(CustomLeaderboardCriteriaType.EnemiesAlive),
		_ => throw new UnreachableException(),
	};

	public static bool IsAllowedAsTarget(this CustomLeaderboardCriteriaType criteriaType)
	{
		return criteriaType is not (CustomLeaderboardCriteriaType.DeathType or CustomLeaderboardCriteriaType.Time or CustomLeaderboardCriteriaType.LevelUpTime2 or CustomLeaderboardCriteriaType.LevelUpTime3 or CustomLeaderboardCriteriaType.LevelUpTime4);
	}
}
