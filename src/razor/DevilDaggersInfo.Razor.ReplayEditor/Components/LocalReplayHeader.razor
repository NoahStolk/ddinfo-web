@using DevilDaggersInfo.Common
@using DevilDaggersInfo.Common.Extensions
@using DevilDaggersInfo.Core.Replay
@using DevilDaggersInfo.Core.Spawnset
@using DevilDaggersInfo.Core.Wiki
@using DevilDaggersInfo.Core.Wiki.Enums
@using DevilDaggersInfo.Core.Wiki.Objects
@using DevilDaggersInfo.Razor.ReplayEditor.Store.State
@using DevilDaggersInfo.Razor.Core.CanvasArena.Components
@using Fluxor
@inherits FluxorComponent
@inject IState<ReplayBinaryState> ReplayBinaryState

@{
	ReplayBinary<LocalReplayBinaryHeader> replayBinary = ReplayBinaryState.Value.ReplayBinary;
	Death? death = Deaths.GetDeathByLeaderboardType(GameVersion.V3_2, (byte)replayBinary.Header.DeathType);
}

<h2 class="text-red text-xl pt-4 pb-2">Header</h2>

<div class="grid grid-cols-2 gap-x-2 max-w-md">
	<div>Version</div>
	<div>@replayBinary.Header.Version</div>
	<div>Timestamp</div>
	<div>@replayBinary.Header.TimestampSinceGameRelease</div>
	<div>Time</div>
	<div>@replayBinary.Header.Time.ToString(StringFormats.TimeFormat)</div>
	<div>Start Time</div>
	<div>@replayBinary.Header.StartTime.ToString(StringFormats.TimeFormat)</div>
	<div>Kills</div>
	<div>@replayBinary.Header.Kills</div>
	<div>Gems</div>
	<div>@replayBinary.Header.Gems</div>
	<div>Daggers Hit</div>
	<div>@replayBinary.Header.DaggersHit</div>
	<div>Daggers Fired</div>
	<div>@replayBinary.Header.DaggersFired</div>
	<div>Death Type</div>
	@if (death.HasValue)
	{
		<div style="color: @death.Value.Color.HexCode">@death.Value.Name</div>
	}
	else
	{
		<div>Invalid death type</div>
	}
	<div>Player ID</div>
	<div>@replayBinary.Header.PlayerId</div>
	<div>Player Name</div>
	<div>@replayBinary.Header.Username</div>
	<div>Spawnset MD5</div>
	<div>@replayBinary.Header.SpawnsetMd5.ByteArrayToHexString()</div>
</div>

@if (SpawnsetBinary.TryParse(replayBinary.Header.SpawnsetBuffer, out SpawnsetBinary? spawnset))
{
	<SpawnsetArena SpawnsetBinary="spawnset" CurrentTime="0" />
}
else
{
	<div>Invalid spawnset in replay!</div>
}
