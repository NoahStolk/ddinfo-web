@page "/donations"
@using DevilDaggersInfo.Web.Client.Components
@using DevilDaggersInfo.Web.Client.Extensions
@using DevilDaggersInfo.Web.Client.HttpClients
@using DevilDaggersInfo.Web.ApiSpec.Main.Donations
@inject MainApiHttpClient Http

<Heading Title="Donations" />

<p class="para">
	I've built this website, the asset editor, the spawnset editor, custom leaderboards, and all the other stuff entirely in my free time.
</p>

<p class="para">
	The project is free to use, and will always remain free for everyone. All of the code is open source.
</p>

<p class="my-6">
	<a class="btn btn-orange p-2 text-lg font-bold" href="//github.com/NoahStolk/ddinfo-web" role="button" target="_blank">ddinfo-web on GitHub</a>
	<a class="btn btn-orange p-2 text-lg font-bold" href="//github.com/NoahStolk/ddinfo-tools" role="button" target="_blank">ddinfo-tools on GitHub</a>
	<a class="btn btn-orange p-2 text-lg font-bold" href="//github.com/NoahStolk/ddinfo-core" role="button" target="_blank">ddinfo-core on GitHub</a>
</p>

<p class="para">
	If you appreciate the work I've done, or want to support hosting and domain costs for the website, you can consider donating via PayPal.
</p>

<p class="my-6">
	<a class="btn btn-green p-2 text-lg font-bold" href="//paypal.me/NoahStolk" role="button" target="_blank">Donate to DevilDaggers.info</a>
</p>

<p class="para">
	Please be sure to include your leaderboard username and rank in the PayPal message, so I can add you to the list of donations below. Thank you.
</p>

@if (_donors == null)
{
	<Loading />
}
else
{
	<div class="max-w-lg">
		@foreach (KeyValuePair<GetDonor, string> kvp in _donors)
		{
			<div class="grid grid-cols-2 justify-items-stretch odd:bg-gray-1 px-2">
				<div style="white-space: nowrap;" class="justify-self-start font-goethe devil highlight hover:underline text-xl">
					@if (kvp.Key.PlayerId.HasValue)
					{
						<a href="/leaderboard/player/@kvp.Key.PlayerId">@kvp.Key.PlayerName</a>
					}
					else
					{
						@kvp.Key.PlayerName
					}
				</div>
				<div class="justify-self-end">
					<Tooltip Position=TooltipPosition.Left Text="@kvp.Value">
						<span class="cursor-pointer text-lg">â‚¬ @CentsToString(kvp.Key.Donations.Sum(d => d.ConvertedEuroCentsReceived))</span>
					</Tooltip>
				</div>
			</div>
		}
	</div>
}

@code
{
	private Dictionary<GetDonor, string>? _donors;

	protected override async Task OnInitializedAsync()
	{
		List<GetDonor> donors = await Http.GetDonors();
		_donors = donors.ToDictionary(donor => donor, donor => string.Join(" + ", donor.Donations
			.GroupBy(donation => donation.Currency)
			.Select(g => $"{g.Key.GetChar()} {CentsToString(g.Sum(d => d.Amount))} {g.Key.ToString().ToUpper()}")));
	}

	private static string CentsToString(int cents) => (cents / 100.0).ToString("0.00");
}
