@page "/admin/donations"
@inherits BaseAdminPage
@using DevilDaggersInfo.Core.Common
@using DevilDaggersInfo.Web.ApiSpec.Admin.Donations
@using DevilDaggersInfo.Web.Client.Components.Admin
@using DevilDaggersInfo.Web.Core.Claims

<AdminAuthorizer Base="this" RequiredRole="@Roles.Admin">
	<AdminOverview
		@ref="_overview"
		TGetDto="GetDonationForOverview"
		TSorting="DonationSorting"
		Title="Admin - Donations"
		ApiCall="Http.GetDonations"
		DeletionApiCall="(int id) => Http.DeleteDonationById(id)"
		Columns="_columns" />
</AdminAuthorizer>

@code
{
	// ! Blazor ref.
	private AdminOverview<GetDonationForOverview, DonationSorting> _overview = null!;

	private readonly List<AdminOverviewColumn<GetDonationForOverview, DonationSorting>> _columns =
	[
		new(DonationSorting.Id, "Id", d => d.Id, TextAlign.Right),
		new(DonationSorting.PlayerName, "Player", d => d.PlayerName, TextAlign.Left),
		new(DonationSorting.Amount, "Amount", d => d.Amount, TextAlign.Right),
		new(DonationSorting.Currency, "Currency", d => d.Currency, TextAlign.Left),
		new(DonationSorting.ConvertedEuroCentsReceived, "Converted euro cents received", d => d.ConvertedEuroCentsReceived, TextAlign.Right),
		new(DonationSorting.DateReceived, "Date", d => d.DateReceived.ToString(StringFormats.DateTimeUtcFormat), TextAlign.Left),
		new(DonationSorting.Note, "Note", d => d.Note, TextAlign.Left),
		new(DonationSorting.IsRefunded, "Refunded", d => d.IsRefunded, TextAlign.Left),
	];
}
