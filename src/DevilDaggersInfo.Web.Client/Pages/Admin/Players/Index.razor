@page "/admin/players"
@inherits BaseAdminPage
@using DevilDaggersInfo.Core.Common
@using DevilDaggersInfo.Web.ApiSpec.Admin.Players
@using DevilDaggersInfo.Web.Client.Components.Admin
@using DevilDaggersInfo.Web.Core.Claims

<AdminAuthorizer Base="this" RequiredRole="@Roles.Players">
	<AdminOverview
		@ref="_overview"
		TGetDto="GetPlayerForOverview"
		TSorting="PlayerSorting"
		Title="Admin - Players"
		ApiCall="Http.GetPlayers"
		DeletionApiCall="(int id) => Http.DeletePlayerById(id)"
		Columns="_columns" />
</AdminAuthorizer>

@code
{
	// ! Blazor ref.
	private AdminOverview<GetPlayerForOverview, PlayerSorting> _overview = null!;

	private readonly List<AdminOverviewColumn<GetPlayerForOverview, PlayerSorting>> _columns =
	[
		new(PlayerSorting.Id, "Id", d => d.Id, TextAlign.Right),
		new(PlayerSorting.PlayerName, "Name", d => d.PlayerName, TextAlign.Left),
		new(PlayerSorting.CommonName, "Common name", d => d.CommonName, TextAlign.Left),
		new(PlayerSorting.DiscordUserId, "Discord ID", d => d.DiscordUserId, TextAlign.Right),
		new(PlayerSorting.CountryCode, "Country", d => d.CountryCode, TextAlign.Left),
		new(PlayerSorting.Dpi, "DPI", d => d.Dpi, TextAlign.Right),
		new(PlayerSorting.InGameSens, "Sens", d => d.InGameSens?.ToString(StringFormats.InGameSensFormat), TextAlign.Right),
		new(PlayerSorting.Fov, "FOV", d => d.Fov, TextAlign.Right),
		new(PlayerSorting.IsRightHanded, "Right hand", d => d.IsRightHanded, TextAlign.Left),
		new(PlayerSorting.HasFlashHandEnabled, "Flash hand", d => d.HasFlashHandEnabled, TextAlign.Left),
		new(PlayerSorting.Gamma, "Gamma", d => d.Gamma?.ToString(StringFormats.GammaFormat), TextAlign.Right),
		new(PlayerSorting.UsesLegacyAudio, "Legacy audio", d => d.UsesLegacyAudio, TextAlign.Left),
		new(PlayerSorting.UsesHrtf, "HRTF", d => d.UsesHrtf, TextAlign.Left),
		new(PlayerSorting.UsesInvertY, "Invert Y", d => d.UsesInvertY, TextAlign.Left),
		new(PlayerSorting.VerticalSync, "V-sync", d => d.VerticalSync, TextAlign.Left),
		new(PlayerSorting.BanType, "Ban type", d => d.BanType, TextAlign.Left),
		new(PlayerSorting.BanDescription, "Ban description", d => d.BanDescription, TextAlign.Left),
		new(PlayerSorting.BanResponsibleId, "Ban responsible ID", d => d.BanResponsibleId, TextAlign.Right),
		new(PlayerSorting.IsBannedFromDdcl, "Banned from DDCL", d => d.IsBannedFromDdcl, TextAlign.Left),
		new(PlayerSorting.HideSettings, "Hide settings", d => d.HideSettings, TextAlign.Left),
		new(PlayerSorting.HideDonations, "Hide donations", d => d.HideDonations, TextAlign.Left),
		new(PlayerSorting.HidePastUsernames, "Hide past names", d => d.HidePastUsernames, TextAlign.Left),
	];
}
