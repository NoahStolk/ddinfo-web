@page "/admin/custom-entries"
@inherits BaseAdminPage
@using DevilDaggersInfo.Core.Common
@using DevilDaggersInfo.Web.ApiSpec.Admin.CustomEntries
@using DevilDaggersInfo.Web.Client.Components.Admin
@using DevilDaggersInfo.Web.Core.Claims

<AdminAuthorizer Base="this" RequiredRole="@Roles.Admin">
	<AdminOverview
		@ref="_overview"
		TGetDto="GetCustomEntryForOverview"
		TSorting="CustomEntrySorting"
		Title="Admin - Custom Entries"
		ApiCall="Http.GetCustomEntries"
		DeletionApiCall="(int id) => Http.DeleteCustomEntryById(id)"
		Columns="_columns"/>
</AdminAuthorizer>

@code
{
	// ! Blazor ref.
	private AdminOverview<GetCustomEntryForOverview, CustomEntrySorting> _overview = null!;

	private readonly List<AdminOverviewColumn<GetCustomEntryForOverview, CustomEntrySorting>> _columns =
	[
		new(CustomEntrySorting.Id, "Id", ce => ce.Id, TextAlign.Right),
		new(CustomEntrySorting.SpawnsetName, "Name", ce => ce.SpawnsetName, TextAlign.Left),
		new(CustomEntrySorting.PlayerName, "Player", ce => ce.PlayerName, TextAlign.Left),
		new(CustomEntrySorting.Time, "Time", ce => ce.Time.ToString(StringFormats.TimeFormat), TextAlign.Right),
		new(CustomEntrySorting.GemsCollected, "Gems", ce => ce.GemsCollected, TextAlign.Right),
		new(CustomEntrySorting.GemsDespawned, "Gems despawned", ce => ce.GemsDespawned, TextAlign.Right),
		new(CustomEntrySorting.GemsEaten, "Gems eaten", ce => ce.GemsEaten, TextAlign.Right),
		new(CustomEntrySorting.GemsTotal, "Gems total", ce => ce.GemsTotal, TextAlign.Right),
		new(CustomEntrySorting.EnemiesKilled, "Kills", ce => ce.EnemiesKilled, TextAlign.Right),
		new(CustomEntrySorting.EnemiesAlive, "Alive", ce => ce.EnemiesAlive, TextAlign.Right),
		new(CustomEntrySorting.DaggersFired, "Fired", ce => ce.DaggersFired, TextAlign.Right),
		new(CustomEntrySorting.DaggersHit, "Hit", ce => ce.DaggersHit, TextAlign.Right),
		new(CustomEntrySorting.HomingStored, "Homing", ce => ce.HomingStored, TextAlign.Right),
		new(CustomEntrySorting.HomingEaten, "Homing eaten", ce => ce.HomingEaten, TextAlign.Right),
		new(CustomEntrySorting.DeathType, "Death", ce => ce.DeathType, TextAlign.Left),
		new(CustomEntrySorting.LevelUpTime2, "Level 2", ce => ce.LevelUpTime2.ToString(StringFormats.TimeFormat), TextAlign.Right),
		new(CustomEntrySorting.LevelUpTime3, "Level 3", ce => ce.LevelUpTime3.ToString(StringFormats.TimeFormat), TextAlign.Right),
		new(CustomEntrySorting.LevelUpTime4, "Level 4", ce => ce.LevelUpTime4.ToString(StringFormats.TimeFormat), TextAlign.Right),
		new(CustomEntrySorting.SubmitDate, "Date", ce => ce.SubmitDate.ToString(StringFormats.DateTimeUtcFormat), TextAlign.Left),
		new(CustomEntrySorting.ClientVersion, "Version", ce => ce.ClientVersion, TextAlign.Right),
	];
}
