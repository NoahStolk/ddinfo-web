@page "/admin/users"
@inherits BaseAdminPage
@using DevilDaggersInfo.Web.Client.Components.Admin
@using DevilDaggersInfo.Web.Core.Claims
@using DevilDaggersInfo.Web.ApiSpec.Admin.Users
@using DevilDaggersInfo.Core.Common

<AdminAuthorizer Base="this" RequiredRole="@Roles.Players">
	<AdminOverview
		@ref="_overview"
		TGetDto="GetUser"
		TSorting="UserSorting"
		Title="Admin - Users"
		ApiCall="Http.GetUsers"
		DeletionApiCall="(int id) => Http.DeleteUserById(id)"
		Columns="_columns" />
</AdminAuthorizer>

@code
{
	// ! Blazor ref.
	private AdminOverview<GetUser, UserSorting> _overview = null!;

	private readonly List<AdminOverviewColumn<GetUser, UserSorting>> _columns =
	[
		new(UserSorting.Id, "Id", d => d.Id, TextAlign.Right),
		new(UserSorting.Name, "Name", d => d.Name, TextAlign.Left),
		new(UserSorting.PlayerId, "Player Id", d => d.PlayerId, TextAlign.Right),
		new(UserSorting.PlayerName, "Player Name", d => d.PlayerName, TextAlign.Left),
		new(UserSorting.RegistrationDate, "Registration Date", d => d.RegistrationDate.ToString(StringFormats.DateTimeUtcFormat), TextAlign.Right),
		new(UserSorting.AdminRole, "Admin", d => d.IsAdmin, TextAlign.Left),
		new(UserSorting.CustomLeaderboardsRole, "Custom Leaderboards", d => d.IsCustomLeaderboardsMaintainer, TextAlign.Left),
		new(UserSorting.ModsRole, "Mods", d => d.IsModsMaintainer, TextAlign.Left),
		new(UserSorting.PlayersRole, "Players", d => d.IsPlayersMaintainer, TextAlign.Left),
		new(UserSorting.SpawnsetsRole, "Spawnsets", d => d.IsSpawnsetsMaintainer, TextAlign.Left),
	];
}
