@page "/leaderboard/statistics"
@inject MainApiHttpClient Http

<Heading Title="Leaderboard Statistics" />

@if (_statistics == null)
{
	<Loading />
}
else
{
	if (!_statistics.IsFetched)
	{
		<p class="py-1">Statistics are not initialized.</p>
	}
	else
	{
		<p class="py-1">Statistics were last fetched on @_statistics.DateTime.ToString(StringFormats.DateTimeUtcFormat).</p>

		<Heading Title="Scores" Level="2" />
		<p>The average time survived for all players is @MarkupUtils.LeaderboardTime(_statistics.GlobalStatistics.Times.Average) seconds.</p>
		<p>The median time survived for all players is @MarkupUtils.LeaderboardTime(_statistics.GlobalStatistics.Times.Median) seconds.</p>
		<p>The mode time survived for all players is @MarkupUtils.LeaderboardTime(_statistics.GlobalStatistics.Times.Mode) seconds.</p>
		<BarChart DataOptions="_sub500DataOptions" UniqueName="#sub500-chart" DataSet="@_sub500Data" Options="_scoreBarChartOptions" XScaleTexts="Enumerable.Range(0, 50).Select(i => (i * 10).ToString())" />
		<div class="grid grid-cols-1 xl:grid-cols-2">
			<BarChart DataOptions="_sub1000DataOptions" UniqueName="#sub1000-chart" DataSet="@_sub1000Data" Options="_scoreBarChartOptions" XScaleTexts="Enumerable.Range(0, 50).Select(i => ((i + 50) * 10).ToString())" />
			<BarChart DataOptions="_post1000DataOptions" UniqueName="#post1000-chart" DataSet="@_post1000Data" Options="_scoreBarChartOptions" XScaleTexts="Enumerable.Range(0, 50).Select(i => ((i + 100) * 10).ToString())" />
		</div>

		<div class="grid grid-cols-1 xl:grid-cols-2">
			<div>
				<Heading Title="Kills" Level="2" />
				<p>The average kills for all players is @(_statistics.GlobalStatistics.Kills.Average.ToString("0.00")).</p>
				<p>The median kills for all players is @_statistics.GlobalStatistics.Kills.Median.</p>
				<p>The mode kills for all players is @_statistics.GlobalStatistics.Kills.Mode.</p>
				<BarChart DataOptions="_killsDataOptions" UniqueName="#kills-chart" DataSet="@_killsData" Options="_killsBarChartOptions" XScaleTexts="Enumerable.Range(0, 100).Select(i => (i * 10).ToString())" />
			</div>

			<div>
				<Heading Title="Gems" Level="2" />
				<p>The average gems for all players is @(_statistics.GlobalStatistics.Gems.Average.ToString("0.00")).</p>
				<p>The median gems for all players is @_statistics.GlobalStatistics.Gems.Median.</p>
				<p>The mode gems for all players is @_statistics.GlobalStatistics.Gems.Mode.</p>
				<BarChart DataOptions="_gemsDataOptions" UniqueName="#gems-chart" DataSet="@_gemsData" Options="_gemsBarChartOptions" XScaleTexts="Enumerable.Range(0, 50).Select(i => (i * 10).ToString())" />
			</div>
		</div>

		<div class="grid grid-cols-1 xl:grid-cols-2">
			<div>
				<Heading Title="Upgrades" Level="2" />
				<BarChart DataOptions="_upgradesDataOptions" UniqueName="#upgrades-chart" DataSet="@_upgradesData" Options="_upgradesBarChartOptions" XScaleTexts="_upgrades" />
			</div>

			<div>
				<Heading Title="Daggers Achieved" Level="2" />
				<BarChart DataOptions="_daggersDataOptions" UniqueName="#daggers-chart" DataSet="@_daggersData" Options="_daggersBarChartOptions" XScaleTexts="_daggers" />
			</div>

			<div>
				<Heading Title="Death Types" Level="2" />
				<BarChart DataOptions="_deathsDataOptions" UniqueName="#deaths-chart" DataSet="@_deathsData" Options="_deathsBarChartOptions" XScaleTexts="_deathTypes" />
			</div>

			<div>
				<Heading Title="Enemies Seen" Level="2" />
				<BarChart DataOptions="_enemiesDataOptions" UniqueName="#enemies-chart" DataSet="@_enemiesData" Options="_enemiesBarChartOptions" XScaleTexts="_enemies" />
			</div>
		</div>
	}
}
