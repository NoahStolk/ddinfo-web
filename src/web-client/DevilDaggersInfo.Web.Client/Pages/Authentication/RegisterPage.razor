@page "/authentication/register"
@using DevilDaggersInfo.Api.Main.Authentication
@using DevilDaggersInfo.Web.Client.Authentication
@inject MainApiHttpClient Http
@inject AdminAuthenticationStateProvider Auth
@inject NavigationManager Navigation

<Heading Title="Register" />

<EditForm Model="@Model" OnValidSubmit="@OnValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="text-red">@_serverError</div>
	
	<div class="grid gap-2 grid-cols-2 max-w-md">
		<span>Name</span>
		<input class="bg-black border-gray-3 border-2" @bind="@Model.Name" />
		<span>Password</span>
		<input class="bg-black border-gray-3 border-2" type="password" @bind="@Model.Password" />
		<span>Repeat password</span>
		<input class="bg-black border-gray-3 border-2" type="password" @bind="@Model.PasswordRepeated" />
	</div>

	<button class="btn btn-gray-light px-2 py-1" type="submit">Register</button>
</EditForm>

@code
{
	[Parameter] public RegistrationRequest Model { get; set; } = new();

	private string? _serverError;

	private async Task OnValidSubmit()
	{
		HttpResponseMessage httpResponseMessage = await Http.Register(Model);

		if (httpResponseMessage.StatusCode == HttpStatusCode.OK)
		{
			Navigation.NavigateTo("/authentication/login");
		}
		else
		{
			_serverError = await httpResponseMessage.Content.ReadAsStringAsync();
		}
	}
}
