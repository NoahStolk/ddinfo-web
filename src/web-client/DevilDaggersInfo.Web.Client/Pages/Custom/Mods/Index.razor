@page "/custom/mods"
@using DevilDaggersInfo.Api.Main.Mods
@inject MainApiHttpClient Http
@inject NavigationManager NavigationManager

<Heading Title="Mods" />

<p class="para">
	Mods are asset modification for the game. This includes textures, meshes, shaders, audio, and more. Read more about how to use mods <a class="link" href="/guides/using-mods">here</a>.
</p>

@if (GetMods == null)
{
	<Loading />
}
else
{
	<div class="bg-gray-1 p-2 text-lg">
		<div class="grid gap-2 grid-cols-2 max-w-md mb-2">
			<span>Mod name</span>
			<input class="bg-black border-gray-3 border-2 w-48" value="@ModFilter" @onchange="ChangeInputModName" />
			<span>Author name</span>
			<input class="bg-black border-gray-3 border-2 w-48" value="@AuthorFilter" @onchange="ChangeInputAuthorName" />
			<span>Hosted only</span>
			<Checkbox CurrentValue="@HostedOnly" Selected="@(b => ChangeInputHostedOnly(b))" />
		</div>

		<CascadingValue Value="this">
			<Paging />
		</CascadingValue>
	</div>

	@if (GetMods.Results.Count > 0)
	{
		<div class="grid gap-3 grid-cols-mods-sm md:grid-cols-mods-md lg:grid-cols-mods-lg xl:grid-cols-mods-xl">
			<div><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(ModSorting.Name)">Name</a></div>
			<div class="hidden md:block"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(ModSorting.Authors)">Author(s)</a></div>
			<div><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(ModSorting.LastUpdated)">Last updated</a></div>
			<div class="hidden md:block"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(ModSorting.ModTypes)">Type</a></div>
			<div class="hidden xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(ModSorting.Hosted)">Hosted</a></div>
			<div class="hidden xl:block text-right"><a href="" @onclick:preventDefault class="link" @onclick="() => Sort(ModSorting.ProhibitedAssets)">Prohibited binaries</a></div>
		</div>
		@for (int i = 0; i < GetMods.Results.Count; i++)
		{
			GetModOverview mod = GetMods.Results[i];
			<div class="grid gap-3 grid-cols-mods-sm md:grid-cols-mods-md lg:grid-cols-mods-lg xl:grid-cols-mods-xl h-6 @(i % 2 == 0 ? "bg-gray-1" : string.Empty)">
				<div class="overflow-hidden"><a class="link" href="/custom/mod/@mod.Id">@mod.Name.ToNoBreakString()</a></div>
				<div class="overflow-hidden hidden md:block">@string.Join(", ", mod.Authors).ToNoBreakString()</div>
				<div class="overflow-hidden">@mod.LastUpdated.ToString(StringFormats.DateFormat)</div>
				<div class="overflow-hidden hidden md:block">@mod.ModTypes.ToNoBreakString()</div>
				<div class="overflow-hidden text-right hidden xl:block">@(mod.IsHosted ? "Yes" : "No")</div>
				<div class="overflow-hidden text-right hidden xl:block">@(mod.ContainsProhibitedAssets.HasValue ? mod.ContainsProhibitedAssets.Value ? (MarkupString)"Yes" : (MarkupString)"No" : MarkupStrings.NoDataMarkup)</div>
			</div>
		}
	}
}
