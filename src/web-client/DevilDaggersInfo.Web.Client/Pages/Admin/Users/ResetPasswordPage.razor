@page "/admin/users/reset-password/{Id:int}"
@inherits BaseAdminPage
@using DevilDaggersInfo.Web.Client.StateObjects.Admin.Users
@using Microsoft.AspNetCore.Components
@using System.Text

<AdminAuthorizer Base="this" RequiredRole="@Roles.Admin">
	<Heading Title="Admin - Reset Password" />

	<button class="btn btn-gray p-1" @onclick="() => StateObject.NewPassword = GeneratePassword()">Generate random</button>

	<EditForm Model="@StateObject" OnValidSubmit="@OnValidSubmit">
		<DataAnnotationsValidator />
		<ValidationSummary />

		<div class="grid gap-2 grid-cols-2 max-w-md">
			<span>Password</span>
			<input class="bg-black border-gray-3 border-2" @bind="@StateObject.NewPassword" />
		</div>

		<button class="btn btn-gray p-1" type="submit">Reset password</button>
	</EditForm>
</AdminAuthorizer>

@code
{
	[Parameter, EditorRequired] public int Id { get; set; }

	[Parameter] public ResetPasswordState StateObject { get; set; } = new();

	private static string GeneratePassword()
	{
		Random random = new();
		StringBuilder sb = new();
		const string characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
		for (int i = 0; i < 20; i++)
			sb.Append(characters[random.Next(0, characters.Length)]);
		return sb.ToString();
	}

	private async Task OnValidSubmit()
	{
		try
		{
			HttpResponseMessage hrm = await Http.ResetPasswordForUserById(Id, StateObject.ToModel());

			if (hrm.StatusCode == HttpStatusCode.OK)
				NavigationManager.NavigateTo("/admin/users");
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}
}
