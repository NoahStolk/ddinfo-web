@page "/admin/custom-leaderboards/add"
@inherits BaseAdminPage
@using DevilDaggersInfo.Api.Admin.CustomLeaderboards
@using DevilDaggersInfo.Api.Admin.Spawnsets
@using DevilDaggersInfo.Web.Client.Enums

<AdminAuthorizer Base="this" RequiredRole="@Roles.CustomLeaderboards">
	<AdminAdd Name="Custom Leaderboard" OverviewUrl="/admin/custom-leaderboards" ApiCall="Http.AddCustomLeaderboard" Model="_addCustomLeaderboard" OnPopulate="async (ac) => await PopulateAsync(ac)">
		<InputWrapper Label="Spawnset"><SearchDropdown TKey="int" Values="@_spawnsetNames" Converter="s => int.Parse(s)" @bind-Value="@_addCustomLeaderboard.SpawnsetId" /></InputWrapper>
		<InputWrapper Label="Category"><SearchDropdown TKey="CustomLeaderboardCategory" Values="@(Enum.GetValues<CustomLeaderboardCategory>().ToDictionary(e => e, e => e.ToString()))" Converter="s => Enum.Parse<CustomLeaderboardCategory>(s)" ShowDisplayValue="false" @bind-Value="@_addCustomLeaderboard.Category" /></InputWrapper>
		<InputWrapper Label="Featured"><InputCheckbox @bind-Value="@_addCustomLeaderboard.IsFeatured" /></InputWrapper>
		@if (_addCustomLeaderboard.IsFeatured)
		{
			<InputWrapper Label="Bronze"><InputNumber class="admin-input" @bind-Value="_addCustomLeaderboard.Daggers.Bronze" /></InputWrapper>
			<InputWrapper Label="Silver"><InputNumber class="admin-input" @bind-Value="_addCustomLeaderboard.Daggers.Silver" /></InputWrapper>
			<InputWrapper Label="Golden"><InputNumber class="admin-input" @bind-Value="_addCustomLeaderboard.Daggers.Golden" /></InputWrapper>
			<InputWrapper Label="Devil"><InputNumber class="admin-input" @bind-Value="_addCustomLeaderboard.Daggers.Devil" /></InputWrapper>
			<InputWrapper Label="Leviathan"><InputNumber class="admin-input" @bind-Value="_addCustomLeaderboard.Daggers.Leviathan" /></InputWrapper>
		}

		<Heading Level="2" Title="Criteria" />

		<CriteriaField Name="Gems collected" Criteria="_addCustomLeaderboard.GemsCollectedCriteria" />
		<CriteriaField Name="Gems despawned" Criteria="_addCustomLeaderboard.GemsDespawnedCriteria" />
		<CriteriaField Name="Gems eaten" Criteria="_addCustomLeaderboard.GemsEatenCriteria" />
		<CriteriaField Name="Enemies killed" Criteria="_addCustomLeaderboard.EnemiesKilledCriteria" />
		<CriteriaField Name="Daggers fired" Criteria="_addCustomLeaderboard.DaggersFiredCriteria" />
		<CriteriaField Name="Daggers hit" Criteria="_addCustomLeaderboard.DaggersHitCriteria" />
		<CriteriaField Name="Homing stored" Criteria="_addCustomLeaderboard.HomingStoredCriteria" />
		<CriteriaField Name="Homing eaten" Criteria="_addCustomLeaderboard.HomingEatenCriteria" />
		
		<Heading Level="2" Title="Enemy criteria" />
		
		<CriteriaField Name="Skull 1 kills" Criteria="_addCustomLeaderboard.Skull1KillsCriteria" />
		<CriteriaField Name="Skull 2 kills" Criteria="_addCustomLeaderboard.Skull2KillsCriteria" />
		<CriteriaField Name="Skull 3 kills" Criteria="_addCustomLeaderboard.Skull3KillsCriteria" />
		<CriteriaField Name="Skull 4 kills" Criteria="_addCustomLeaderboard.Skull4KillsCriteria" />
		
		<CriteriaField Name="Spiderling kills" Criteria="_addCustomLeaderboard.SpiderlingKillsCriteria" />
		<CriteriaField Name="Spider Egg kills" Criteria="_addCustomLeaderboard.SpiderEggKillsCriteria" />
		
		<CriteriaField Name="Squid 1 kills" Criteria="_addCustomLeaderboard.Squid1KillsCriteria" />
		<CriteriaField Name="Squid 2 kills" Criteria="_addCustomLeaderboard.Squid2KillsCriteria" />
		<CriteriaField Name="Squid 3 kills" Criteria="_addCustomLeaderboard.Squid3KillsCriteria" />
		
		<CriteriaField Name="Centipede kills" Criteria="_addCustomLeaderboard.CentipedeKillsCriteria" />
		<CriteriaField Name="Gigapede kills" Criteria="_addCustomLeaderboard.GigapedeKillsCriteria" />
		<CriteriaField Name="Ghostpede kills" Criteria="_addCustomLeaderboard.GhostpedeKillsCriteria" />
		
		<CriteriaField Name="Spider 1 kills" Criteria="_addCustomLeaderboard.Spider1KillsCriteria" />
		<CriteriaField Name="Spider 2 kills" Criteria="_addCustomLeaderboard.Spider2KillsCriteria" />
		
		<CriteriaField Name="Leviathan kills" Criteria="_addCustomLeaderboard.LeviathanKillsCriteria" />
		<CriteriaField Name="Orb kills" Criteria="_addCustomLeaderboard.OrbKillsCriteria" />
		<CriteriaField Name="Thorn kills" Criteria="_addCustomLeaderboard.ThornKillsCriteria" />
	</AdminAdd>
</AdminAuthorizer>

@code
{
	private readonly Dictionary<CustomLeaderboardCriteriaOperator, string> _operators = Enum.GetValues<CustomLeaderboardCriteriaOperator>().ToDictionary(e => e, e => e.ToString());
	private readonly Func<string, CustomLeaderboardCriteriaOperator> _operatorConverter = Enum.Parse<CustomLeaderboardCriteriaOperator>;

	private Dictionary<int, string>? _spawnsetNames;
	private readonly AddCustomLeaderboard _addCustomLeaderboard = new();

	private async Task PopulateAsync(AdminAdd<AddCustomLeaderboard> addComponent)
	{
		try
		{
			List<GetSpawnsetName> getSpawnsetNames = await Http.GetSpawnsetNames();
			_spawnsetNames = getSpawnsetNames.ToDictionary(sn => sn.Id, sn => sn.Name);

			addComponent.State = ErrorState.None;
		}
		catch (HttpRequestException ex)
		{
			addComponent.ErrorMessage = ex.StatusCode.HasValue ? $"Error {(int)ex.StatusCode}: {ex.StatusCode}" : "An error occurred while sending the request.";

			addComponent.State = ErrorState.FatalError;
		}
		catch (AccessTokenNotAvailableException exception)
		{
			exception.Redirect();
		}
	}
}
