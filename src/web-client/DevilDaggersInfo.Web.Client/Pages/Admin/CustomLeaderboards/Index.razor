@page "/admin/custom-leaderboards"
@inherits BaseAdminPage
@using DevilDaggersInfo.Api.Admin.CustomLeaderboards
@using DevilDaggersInfo.Common
@using DevilDaggersInfo.Web.Client.Components.Admin
@using DevilDaggersInfo.Web.Core.Claims

<AdminAuthorizer Base="this" RequiredRole="@Roles.CustomLeaderboards">
	<AdminOverview @ref="_overview" TGetDto="GetCustomLeaderboardForOverview" TSorting="CustomLeaderboardSorting" Title="Admin - Custom Leaderboards" ApiCall="(int pageIndex, int pageSize, CustomLeaderboardSorting? sortBy, bool isAscending) => Http.GetCustomLeaderboards(pageIndex, pageSize, sortBy, isAscending)" DeletionApiCall="(int id) => Http.DeleteCustomLeaderboardById(id)" GridConfiguration="grid-cols-admin-custom-leaderboards-sm md:grid-cols-admin-custom-leaderboards-md lg:grid-cols-admin-custom-leaderboards-lg xl:grid-cols-admin-custom-leaderboards-xl">
		<TableHeader>
			<a class="link overflow-hidden text-right" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.Id)" @onclick:preventDefault>Id</a>
			<a class="link overflow-hidden text-left" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.SpawnsetName)" @onclick:preventDefault>Name</a>
			<a class="link overflow-hidden hidden md:block text-right" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.TimeBronze)" @onclick:preventDefault>Bronze</a>
			<a class="link overflow-hidden hidden md:block text-right" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.TimeSilver)" @onclick:preventDefault>Silver</a>
			<a class="link overflow-hidden hidden md:block text-right" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.TimeGolden)" @onclick:preventDefault>Golden</a>
			<a class="link overflow-hidden hidden md:block text-right" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.TimeDevil)" @onclick:preventDefault>Devil</a>
			<a class="link overflow-hidden hidden md:block text-right" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.TimeLeviathan)" @onclick:preventDefault>Levi</a>
			<a class="link overflow-hidden hidden lg:block text-left" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.IsFeatured)" @onclick:preventDefault>Featured</a>
			<a class="link overflow-hidden hidden xl:block text-left" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.DateCreated)" @onclick:preventDefault>Date created</a>
			<a class="link overflow-hidden hidden xl:block text-left" href="" @onclick="() => _overview.Sort(CustomLeaderboardSorting.RankSorting)" @onclick:preventDefault>Rank sorting</a>
		</TableHeader>
		<RowTemplate Context="customLeaderboard">
			<div class="overflow-hidden text-right">@customLeaderboard.Id</div>
			<div class="overflow-hidden text-left">@customLeaderboard.SpawnsetName</div>
			<div class="overflow-hidden hidden md:block text-right">@GetDaggerValue(customLeaderboard.RankSorting, customLeaderboard.Daggers.Bronze)</div>
			<div class="overflow-hidden hidden md:block text-right">@GetDaggerValue(customLeaderboard.RankSorting, customLeaderboard.Daggers.Silver)</div>
			<div class="overflow-hidden hidden md:block text-right">@GetDaggerValue(customLeaderboard.RankSorting, customLeaderboard.Daggers.Golden)</div>
			<div class="overflow-hidden hidden md:block text-right">@GetDaggerValue(customLeaderboard.RankSorting, customLeaderboard.Daggers.Devil)</div>
			<div class="overflow-hidden hidden md:block text-right">@GetDaggerValue(customLeaderboard.RankSorting, customLeaderboard.Daggers.Leviathan)</div>
			<div class="overflow-hidden hidden lg:block text-left">@customLeaderboard.IsFeatured</div>
			<div class="overflow-hidden hidden xl:block text-left">@customLeaderboard.DateCreated?.ToString(StringFormats.DateFormat)</div>
			<div class="overflow-hidden hidden xl:block text-left">@customLeaderboard.RankSorting</div>
		</RowTemplate>
	</AdminOverview>

	<a class="btn btn-red block w-32 mb-2 mx-1 mt-2 font-bold" href="/admin/custom-leaderboards/edit-marker">Edit marker</a>
</AdminAuthorizer>

@code
{
	// ! Blazor ref.
	private AdminOverview<GetCustomLeaderboardForOverview, CustomLeaderboardSorting> _overview = null!;

	private static string GetDaggerValue(CustomLeaderboardRankSorting apiRankSorting, double apiValue)
	{
		// TODO: Use IsTime extension method.
		bool isTime = apiRankSorting is CustomLeaderboardRankSorting.TimeDesc or CustomLeaderboardRankSorting.TimeAsc;
		return apiValue.ToString(isTime ? StringFormats.TimeFormat : "0");
	}
}
