<li class="@(IsActive ? "bg-dark-red" : null) hidden sm:block pl-3 py-1 whitespace-nowrap overflow-x-hidden text-xl cursor-pointer select-none transition-all hover:bg-dark-red" @onmouseleave="@OnMouseOut" @onmouseenter="@OnMouseOver">
	<div>
		<span class="@NavMenu.GetOpacityClass() transition-all absolute inline-block ml-[160px] pointer-events-none">
			&gt;
		</span>
		<NavIcon Type="@IconType" Text="@Text" />
		<ul class="absolute @GetOpacityClass() @GetPointerEventsClass() transition-all duration-150 ease-in-out ml-[180px] -mt-[34px] box-border border-r-2 border-dark-red bg-black">
			<CascadingValue Value="this" Name="NavDropdown">
				@ChildContent
			</CascadingValue>
		</ul>
	</div>
</li>

@*Mobile*@
<li class="block sm:hidden whitespace-nowrap overflow-x-hidden text-xl cursor-pointer select-none transition-all" @onclick="@OnMobileClick">
	<div>
		<div class="@(IsActive ? "bg-dark-red" : null) pl-3 py-1">
			<NavIcon Type="@IconType" Text="@Text" />
			<span class="oi oi-chevron-bottom text-xs" aria-hidden="true"></span>
		</div>
		@if (ShowList)
		{
			<ul class="bg-black pl-5">
				<CascadingValue Value="this" Name="NavDropdown">
					@ChildContent
				</CascadingValue>
			</ul>
		}
	</div>
</li>

@code
{
	private bool _showList;
	public bool ShowList
	{
		get => _showList;
		set
		{
			_showList = value;
			StateHasChanged();
		}
	}

	private bool _isActive;
	public bool IsActive
	{
		get => _isActive;
		set
		{
			_isActive = value;
			StateHasChanged();
		}
	}

	[CascadingParameter(Name = nameof(NavMenu))] public NavMenu NavMenu { get; set; } = null!;

	[Parameter, EditorRequired] public RenderFragment ChildContent { get; set; } = null!;
	[Parameter, EditorRequired] public string Text { get; set; } = null!;
	[Parameter, EditorRequired] public string IconType { get; set; } = null!;

	protected override void OnInitialized()
	{
		NavMenu.NavDropdowns.Add(this);
	}

	private void OnMobileClick(MouseEventArgs mouseEvent)
	{
		if (ShowList)
			ShowList = false;
		else
			NavMenu.ShowSubMenu(this);
	}

	private void OnMouseOver(MouseEventArgs mouseEvent)
	{
		NavMenu.ShowSubMenu(this);
	}

	private void OnMouseOut(MouseEventArgs mouseEvent)
	{
		ShowList = false;
	}

	private string? GetOpacityClass()
	{
		if (!ShowList)
			return "opacity-0";

		return NavMenu.GetOpacityClass();
	}

	private string GetPointerEventsClass()
	{
		return ShowList ? "pointer-events-auto" : "pointer-events-none";
	}
}
